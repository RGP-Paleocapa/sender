name: Deploy

on:
  push:
    branches:
      - main
      - master

jobs:
  build:
    name: Build and Lint
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repo
        uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '18'

      - name: Install dependencies
        run: npm install

      - name: Run lint
        run: npm run lint

      - name: Build project
        run: npm run build

      - name: Check dist contents before upload
        run: |
          echo "Contents of dist directory before upload:"
          ls -la ./dist  # List files to ensure they were built

      - name: Upload production-ready build files
        uses: actions/upload-artifact@v4
        with:
          name: production-files
          path: ./dist

  deploy:
    name: Deploy
    needs: build
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'

    steps:
      - name: Download artifact
        uses: actions/download-artifact@v4
        with:
          name: production-files
          path: ./dist

      - name: Verify downloaded files
        run: |
          echo "Verifying contents of dist directory after downloading:"
          ls -la ./dist  # List files to ensure they were downloaded
          echo "Checking for specific files:"
          if test -f ./dist/index.html; then
            echo "index.html exists."
          else
            echo "index.html does NOT exist."
          fi
          if test -f ./dist/vite.svg; then
            echo "vite.svg exists."
          else
            echo "vite.svg does NOT exist."
          fi

      - name: Print working directory
        run: |
          echo "Current working directory: $(pwd)"
          ls -la  # List all files in the current directory

      - name: Checkout the target repository
        uses: actions/checkout@v4
        with:
          repository: rgp-paleocapa/receiver  # Change to the target repo's name
          ref: master  # Specify the branch in the target repo you want to push to
          token: ${{ secrets.TARGET_REPO_TOKEN }}  # Use the personal access token for authentication
          path: ./receiver

      - name: Clear target repo and prepare for copying files
        run: |
          echo "Clearing target repo before copying files..."
          rm -rf ./receiver/*  # Clear all files in the target repo

      - name: Copy built files to target repository
        run: |
          echo "Attempting to copy files from dist to target repo..."
          
          # Check if the 'dist' directory exists and is not empty
          if [ -d "./dist" ] && [ "$(ls -A ./dist)" ]; then
            cp -r ./dist/* ./receiver/  # Copy all files and subdirectories from dist to the target repo
            echo "Files copied from dist to target repo."
          else
            echo "No files found in dist. Checking for alternative directories..."
            
            # Check for other potential directories
            alternative_dirs=("build" "out" "public")  # List alternative directories to check
            
            found_files=false  # Flag to track if any files are found
            
            for dir in "${alternative_dirs[@]}"; do
              if [ -d "./$dir" ] && [ "$(ls -A ./$dir)" ]; then
                echo "Found files in $dir. Copying files to target repo..."
                cp -r ./$dir/* ./receiver/  # Copy all files and subdirectories from alternative directory to the target repo
                echo "Files copied from $dir to target repo."
                found_files=true  # Set flag to true
                break  # Exit loop after copying
              fi
            done
            
            # If no files were found in any directories
            if [ "$found_files" = false ]; then
              echo "No files found in dist or alternative directories."
              exit 1  # Fail the step if no files were found
            fi
          fi
        
      - name: Push to target repository
        run: |
          cd ./receiver  # Change to the target repo directory
          git config user.name "GitHub Actions"
          git config user.email "actions@github.com"
          git add .
          git commit -m "Deploy from source repo" || echo "No changes to commit"
          git push origin master  # Push to the appropriate branch
